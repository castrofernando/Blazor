@page "/editgame"
@page "/editgame/{id:int}"
@rendermode InteractiveServer

@inject NavigationManager NavigationManager
@inject GamesClient GamesClient
@inject GenresClient GenresClient

<PageTitle>New Game</PageTitle>
<h3>New Game</h3>

@if(genres is null || game is null) {
    <p><em>Loading...</em></p>
}else {
    <div class="row">
        <div class="col-md-6">
            <EditForm Model="@game" FormName="editGame" OnValidSubmit="HandleSubmit">
                <DataAnnotationsValidator/>
                <ValidationSummary/>
                <div class="mb-3 ">
                    <label for="name" class="form-label">Name:</label>
                    <InputText id="name" class="form-control" @bind-Value="game.Name" />
                    <ValidationMessage For="() => game.Name" />
                </div>
                <div class="mb-3">
                    <label for="genreId" class="form-label">Genre:</label>
                    <InputSelect id="genreId" class="form-select" @bind-Value="game.GenreId">
                        <option value="">Select a genre...</option>
                        @foreach(var genre in genres){
                            @if(game.GenreId == genre.Name) {
                                <option value="@genre.Id" selected>@genre.Name</option>
                            }else {
                                <option value="@genre.Id">@genre.Name</option>
                            }
                        }
                    </InputSelect>
                    <ValidationMessage For="() => game.GenreId" />
                </div>
                <div class="mb-3">
                    <label for="price" class="form-label">Price:</label>
                    <InputNumber id="price" class="form-control" @bind-Value="game.Price" />
                    <ValidationMessage For="() => game.Price" />
                </div>
                <div class="mb-3">
                    <label for="releaseDate" class="form-label">Release Date:</label>
                    <InputDate id="releaseDate" class="form-control" @bind-Value="game.ReleaseDate" />
                </div>
                <button type="submit" class="btn btn-primary">Save</button>
                <a role="button" class="btn btn-danger" href="/">Cancel</a>
            </EditForm>
        </div>
    </div>
}


@code {
    [Parameter]
    public int? Id {get;set;}

    [SupplyParameterFromForm]
    private GameDetails? game {get;set;} 

    private Genre[]? genres;

    protected override void OnParametersSet() {
        if( game is not null) {
            return;
        }

        if(Id is not null) {
            game = GamesClient.GetGame(Id.Value);
        }else {
            game = new() {
                Name = string.Empty,
                ReleaseDate = DateOnly.FromDateTime(DateTime.Now)
            };
        }
    }
    protected override void OnInitialized() {
        genres = GenresClient.GetGenres();
    }

    private void HandleSubmit() {
        ArgumentNullException.ThrowIfNull(game);
        if(Id is null) {
            GamesClient.AddGame(game);
        }else {
            game.Id = Id.Value;
            GamesClient.UpdateGame(game);
        }
        NavigationManager.NavigateTo("/");
    }

}
